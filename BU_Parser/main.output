Nonterminals useless in grammar

   type_specifier_list
   parameter_specifier_list


Terminals unused in grammar

   CHAR_CONST
   NUMBER
   ADD
   SUB
   MUL
   DIV
   ABS
   MOD
   LEQ
   GEQ
   EQUAL_TO
   NOT
   AND
   OR
   BITWISE_AND
   BITWISE_OR
   BITWISE_XOR
   OP
   CP
   LB
   RB
   INCREMENT
   DECREMENT
   EOL
   END_OF_FILE
   COLON
   COMMA
   POINTER_TO_MEMBER
   IF
   ELSE
   WHILE
   FOR
   DO
   RETURN


Rules useless in grammar

   20 type_specifier_list: %empty
   21                    | type_specifier_list COMMA type_specifier

   22 parameter_specifier_list: %empty
   23                         | parameter_specifier_list COMMA type_specifier ID


Grammar

    0 $accept: program $end

    1 program: statements

    2 semi_colon_list: %empty
    3                | semi_colon_list SEMI_COLON

    4 statements: statements statement
    5           | statement

    6 statement: include_file
    7          | direct_declaration

    8 include_file: INCLUDE LT ID PERIOD ID GT

    9 direct_declaration: type_specifier ID semi_colon_list
   10                   | type_specifier ID LBRACKET RBRACKET ASSIGN STRING semi_colon_list

   11 type_specifier: type
   12               | SIGNED type
   13               | UNSIGNED type

   14 type: CHAR
   15     | SHORT
   16     | INT
   17     | LONG
   18     | FLOAT
   19     | DOUBLE


Terminals, with rules where they appear

$end (0) 0
error (256)
LBRACKET (258) 10
"type_spec" (259)
ID (260) 8 9 10
STRING (261) 10
CHAR_CONST (262)
NUMBER (263)
ADD (264)
SUB (265)
MUL (266)
DIV (267)
ABS (268)
MOD (269)
LT (270) 8
GT (271) 8
LEQ (272)
GEQ (273)
EQUAL_TO (274)
ASSIGN (275) 10
NOT (276)
UNSIGNED (277) 13
SIGNED (278) 12
AND (279)
OR (280)
BITWISE_AND (281)
BITWISE_OR (282)
BITWISE_XOR (283)
OP (284)
CP (285)
LB (286)
RB (287)
RBRACKET (288) 10
INCREMENT (289)
DECREMENT (290)
EOL (291)
END_OF_FILE (292)
COLON (293)
PERIOD (294) 8
COMMA (295)
POINTER_TO_MEMBER (296)
SEMI_COLON (297) 3
INT (298) 16
FLOAT (299) 18
CHAR (300) 14
DOUBLE (301) 19
SHORT (302) 15
LONG (303) 17
IF (304)
ELSE (305)
WHILE (306)
FOR (307)
DO (308)
RETURN (309)
INCLUDE (310) 8


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
program (57)
    on left: 1, on right: 0
semi_colon_list (58)
    on left: 2 3, on right: 3 9 10
statements (59)
    on left: 4 5, on right: 1 4
statement (60)
    on left: 6 7, on right: 4 5
include_file (61)
    on left: 8, on right: 6
direct_declaration (62)
    on left: 9 10, on right: 7
type_specifier (63)
    on left: 11 12 13, on right: 9 10
type (64)
    on left: 14 15 16 17 18 19, on right: 11 12 13


State 0

    0 $accept: . program $end

    UNSIGNED  shift, and go to state 1
    SIGNED    shift, and go to state 2
    INT       shift, and go to state 3
    FLOAT     shift, and go to state 4
    CHAR      shift, and go to state 5
    DOUBLE    shift, and go to state 6
    SHORT     shift, and go to state 7
    LONG      shift, and go to state 8
    INCLUDE   shift, and go to state 9

    program             go to state 10
    statements          go to state 11
    statement           go to state 12
    include_file        go to state 13
    direct_declaration  go to state 14
    type_specifier      go to state 15
    type                go to state 16


State 1

   13 type_specifier: UNSIGNED . type

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    CHAR    shift, and go to state 5
    DOUBLE  shift, and go to state 6
    SHORT   shift, and go to state 7
    LONG    shift, and go to state 8

    type  go to state 17


State 2

   12 type_specifier: SIGNED . type

    INT     shift, and go to state 3
    FLOAT   shift, and go to state 4
    CHAR    shift, and go to state 5
    DOUBLE  shift, and go to state 6
    SHORT   shift, and go to state 7
    LONG    shift, and go to state 8

    type  go to state 18


State 3

   16 type: INT .

    $default  reduce using rule 16 (type)


State 4

   18 type: FLOAT .

    $default  reduce using rule 18 (type)


State 5

   14 type: CHAR .

    $default  reduce using rule 14 (type)


State 6

   19 type: DOUBLE .

    $default  reduce using rule 19 (type)


State 7

   15 type: SHORT .

    $default  reduce using rule 15 (type)


State 8

   17 type: LONG .

    $default  reduce using rule 17 (type)


State 9

    8 include_file: INCLUDE . LT ID PERIOD ID GT

    LT  shift, and go to state 19


State 10

    0 $accept: program . $end

    $end  shift, and go to state 20


State 11

    1 program: statements .
    4 statements: statements . statement

    UNSIGNED  shift, and go to state 1
    SIGNED    shift, and go to state 2
    INT       shift, and go to state 3
    FLOAT     shift, and go to state 4
    CHAR      shift, and go to state 5
    DOUBLE    shift, and go to state 6
    SHORT     shift, and go to state 7
    LONG      shift, and go to state 8
    INCLUDE   shift, and go to state 9

    $default  reduce using rule 1 (program)

    statement           go to state 21
    include_file        go to state 13
    direct_declaration  go to state 14
    type_specifier      go to state 15
    type                go to state 16


State 12

    5 statements: statement .

    $default  reduce using rule 5 (statements)


State 13

    6 statement: include_file .

    $default  reduce using rule 6 (statement)


State 14

    7 statement: direct_declaration .

    $default  reduce using rule 7 (statement)


State 15

    9 direct_declaration: type_specifier . ID semi_colon_list
   10                   | type_specifier . ID LBRACKET RBRACKET ASSIGN STRING semi_colon_list

    ID  shift, and go to state 22


State 16

   11 type_specifier: type .

    $default  reduce using rule 11 (type_specifier)


State 17

   13 type_specifier: UNSIGNED type .

    $default  reduce using rule 13 (type_specifier)


State 18

   12 type_specifier: SIGNED type .

    $default  reduce using rule 12 (type_specifier)


State 19

    8 include_file: INCLUDE LT . ID PERIOD ID GT

    ID  shift, and go to state 23


State 20

    0 $accept: program $end .

    $default  accept


State 21

    4 statements: statements statement .

    $default  reduce using rule 4 (statements)


State 22

    9 direct_declaration: type_specifier ID . semi_colon_list
   10                   | type_specifier ID . LBRACKET RBRACKET ASSIGN STRING semi_colon_list

    LBRACKET  shift, and go to state 24

    $default  reduce using rule 2 (semi_colon_list)

    semi_colon_list  go to state 25


State 23

    8 include_file: INCLUDE LT ID . PERIOD ID GT

    PERIOD  shift, and go to state 26


State 24

   10 direct_declaration: type_specifier ID LBRACKET . RBRACKET ASSIGN STRING semi_colon_list

    RBRACKET  shift, and go to state 27


State 25

    3 semi_colon_list: semi_colon_list . SEMI_COLON
    9 direct_declaration: type_specifier ID semi_colon_list .

    SEMI_COLON  shift, and go to state 28

    $default  reduce using rule 9 (direct_declaration)


State 26

    8 include_file: INCLUDE LT ID PERIOD . ID GT

    ID  shift, and go to state 29


State 27

   10 direct_declaration: type_specifier ID LBRACKET RBRACKET . ASSIGN STRING semi_colon_list

    ASSIGN  shift, and go to state 30


State 28

    3 semi_colon_list: semi_colon_list SEMI_COLON .

    $default  reduce using rule 3 (semi_colon_list)


State 29

    8 include_file: INCLUDE LT ID PERIOD ID . GT

    GT  shift, and go to state 31


State 30

   10 direct_declaration: type_specifier ID LBRACKET RBRACKET ASSIGN . STRING semi_colon_list

    STRING  shift, and go to state 32


State 31

    8 include_file: INCLUDE LT ID PERIOD ID GT .

    $default  reduce using rule 8 (include_file)


State 32

   10 direct_declaration: type_specifier ID LBRACKET RBRACKET ASSIGN STRING . semi_colon_list

    $default  reduce using rule 2 (semi_colon_list)

    semi_colon_list  go to state 33


State 33

    3 semi_colon_list: semi_colon_list . SEMI_COLON
   10 direct_declaration: type_specifier ID LBRACKET RBRACKET ASSIGN STRING semi_colon_list .

    SEMI_COLON  shift, and go to state 28

    $default  reduce using rule 10 (direct_declaration)
